name: Deploy Spring Boot Application

on:
  push:
    branches:
      - main  # Trigger when merging to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Java environment
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      # Set up Maven cache
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      # Build the application
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # Deploy to server using SSH and password
      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.POTATO_HOST }}           # Server hostname or IP
          username: ${{ secrets.POTATO_USER }}       # SSH username
          password: ${{ secrets.POTATO_KEY }}        # SSH password stored in secrets
          port: 22                                   # Default SSH port, change if needed
          script: |
            # Stop old application running on port 8081
            echo "Checking for existing application on port 8081..."
            PID=$(lsof -t -i:8081)
            if [ ! -z "$PID" ]; then
              echo "Killing process $PID on port 8081"
              kill -9 $PID
            else
              echo "No process running on port 8081"
            fi

            # Stop old application if it's running in a screen session
            screen -S springboot-app -X quit || true
            
             # Upload the new JAR to the root directory
            echo "Uploading new JAR file to /root/..."
            scp target/xiao-potato-0.0.1-SNAPSHOT.jar ${{ secrets.POTATO_USER }}@${{ secrets.POTATO_HOST }}:/root/

            # Create a script to run the application
            echo "Creating startup script..."
            cat <<EOF > /tmp/start-app.sh
            #!/bin/bash
            export ALIYUN_ACCESS_KEY_ID=${{ secrets.ALIYUN_ACCESS_KEY_ID }}
            export ALIYUN_ACCESS_KEY_SECRET=${{ secrets.ALIYUN_ACCESS_KEY_SECRET }}
            java -Dspring.profiles.active=prod \
                 -Daliyun.accessKeyId=\$ALIYUN_ACCESS_KEY_ID \
                 -Daliyun.accessKeySecret=\$ALIYUN_ACCESS_KEY_SECRET \
                 -jar xiao-potato-0.0.1-SNAPSHOT.jar
            EOF
            chmod +x /tmp/start-app.sh

            # Start the application in a new screen session
            screen -dmS springboot-app /tmp/start-app.sh
          
